//----------------------sstsoft 2001-----------------------------------------
#ifndef __tsoft_WindowsTile_H__
#define __tsoft_WindowsTile_H__
//---------------------------------------------------------------------------
#include <windows.h>
#include <winuser.h>
#include "tsoft_Context.h"
//---------------------------------------------------------------------------
#define MAX_TILES 24
//---------------------------------------------------------------------------
namespace ts {
//---------------------------------------------------------------------------
class WindowsTILES {
__int8 Count;
public:
RECT Rect;
//---------------------------------------------------------------------------
class WindowsTILE {
public:
RECT Rect;
ts::Context *Context;
//---------------------------------------------------------------------------
__stdcall   WindowsTILE(void) {
Context  = new ts::Context; }
//---------------------------------------------------------------------------

__stdcall  ~WindowsTILE(void) {
delete Context; }
//---------------------------------------------------------------------------
} *Tile[MAX_TILES];
//---------------------------------------------------------------------------

__int8 Tiles_Count() {
return Count;
}
//---------------------------------------------------------------------------

__stdcall  WindowsTILES(void) {

Count = 0;
  for (register __int32 i = 0; i < MAX_TILES; i++) {
  Tile[i] = new WindowsTILE;

  Tile[i]->Rect.left = 0;//i*32;
  Tile[i]->Rect.right = 32;//(i+1)*32;
  Tile[i]->Rect.top = 0;//i*24;
  Tile[i]->Rect.bottom = 24;//(i+1)*24;
 }
  Rect.left = 0;
  Rect.right = 32*32;
  Rect.top = 0;
  Rect.bottom = 32*32;
 }
//---------------------------------------------------------------------------

__stdcall ~WindowsTILES(void) {
 for (register __int32 i = 0; i < MAX_TILES; i++) {
 delete Tile[i]; }
}
//---------------------------------------------------------------------------
};
//---------------------------------------------------------------------------
} // namespace
//---------------------------------------------------------------------------
#endif
//---------------------------------------------------------------------------

